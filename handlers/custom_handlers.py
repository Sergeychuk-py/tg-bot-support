from aiogram import Router, types, Bot, F
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from aiogram.enums import ParseMode

fms_router = Router()


class Reg(StatesGroup):
    name = State()
    description = State()
    number = State()


@fms_router.callback_query(F.data == "order")
async def order_name(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Reg.name)
    await callback.message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µüëã, –∫–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')


@fms_router.message(Reg.name)
async def order_description(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Reg.description)
    await message.answer('üóí –û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á–∏ –±–æ—Ç–∞ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª')


@fms_router.message(Reg.description)
async def order_number(message: types.Message, state: FSMContext):
    await state.update_data(description=message.text)
    await state.set_state(Reg.number)
    await message.answer('üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞,\n –ø—Ä–∏–≤—è–∑–∞–Ω–æ–≥–æ –∫ —Ç–µ–ª–µ–≥—Ä–∞–º—É')


@fms_router.message(Reg.number)
async def order_number(message: types.Message, state: FSMContext, bot: Bot):
    await state.update_data(number=message.text)
    data = await state.get_data()
    await message.answer(f"ü§µ  Ô∏è–ò–º—è: {data['name']}\n\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['number']}\n\nüóí –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: {data['description']}\n------------------------------------------\n<b>–°–ø–∞—Å–∏–±–æ, –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ ‚úÖ</b>\n–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—èüëå\n",
                         parse_mode=ParseMode.HTML)
    await state.clear()
    await bot.send_message(chat_id=1526741555, text=f"<b>–ó–∞—è–≤–∫–∞</b>\n–ò–º—è:{data['name']}\n–¢–µ–ª–µ—Ñ–æ–Ω:{data['number']}\n–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:{data['description']}", parse_mode=ParseMode.HTML)
